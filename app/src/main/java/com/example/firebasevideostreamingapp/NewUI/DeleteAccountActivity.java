package com.example.firebasevideostreamingapp.NewUI;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.View;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.firebasevideostreamingapp.R;
import com.example.firebasevideostreamingapp.databinding.ActivityDeleteAccountBinding;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class DeleteAccountActivity extends AppCompatActivity {

    //ViewBing
    private ActivityDeleteAccountBinding binding;

    //ProgressDialog to show while deleting user and app data and info
    private ProgressDialog progressDialog;

    //TAG for logs in logcat
    private static final String TAG="DELETE_ACCOUNT_TAG";

    //Firebase Auth for Auth related task
    private FirebaseAuth firebaseAuth;
    private FirebaseUser firebaseUser;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);

        //activity_delete_account.xml=ActivityDeleteAccountBinding
        binding=ActivityDeleteAccountBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot()); //get root of xml file

        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });


        //init/setup progressDialog to while deleting account
        progressDialog = new ProgressDialog(this);
        progressDialog.setTitle("Please Wait..");
        progressDialog.setCanceledOnTouchOutside(false);

        //Get Instance of the firebase auth for Auth related task
        firebaseAuth=FirebaseAuth.getInstance();

        //get instance of firebaseUser to get current user and delete
        firebaseUser=firebaseAuth.getCurrentUser();

        //Handle confirmDeleteBtn click, to Delete User Account and App data as well
        binding.confirmDeleteBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
               // deleteAccount();
            }
        });

    }

//    private void deleteAccount() {
//
//        //        getting unique id of FirebaseUser, generated by the Firebase itself
//        String myUid = firebaseAuth.getUid();
//
//        //show progress
//        progressDialog.setMessage("Deleting User Account..");
//        progressDialog.show();
//
//        //step:1 Delete User Account
//        firebaseUser.delete()
//                .addOnSuccessListener(new OnSuccessListener<Void>() {
//                    @Override
//                    public void onSuccess(Void unused) {
//                        //User Account Deleted
//                        Log.d(TAG, "onSuccess: Account Deleted Successfully ");
//
//                        progressDialog.setMessage("Deleting User Ads ");
//
//    }
}